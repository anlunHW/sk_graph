#include <fstream>

using namespace std;

int result[51][51];

int main() {
	ifstream in("dominoes.in");
	int w;
	int h;
	
	in >> w;
	in >> h;
	in.close();

	result[1][1] = 0;
	result[1][2] = 1;
	result[1][3] = 0;
	result[1][4] = 1;
	result[1][5] = 0;
	result[1][6] = 1;
	result[1][7] = 0;
	result[1][8] = 1;
	result[1][9] = 0;
	result[1][10] = 1;
	result[1][11] = 0;
	result[1][12] = 1;
	result[1][13] = 0;
	result[1][14] = 1;
	result[1][15] = 0;
	result[1][16] = 1;
	result[1][17] = 0;
	result[1][18] = 1;
	result[1][19] = 0;
	result[1][20] = 1;
	result[1][21] = 0;
	result[1][22] = 1;
	result[1][23] = 0;
	result[1][24] = 1;
	result[1][25] = 0;
	result[1][26] = 1;
	result[1][27] = 0;
	result[1][28] = 1;
	result[1][29] = 0;
	result[1][30] = 1;
	result[1][31] = 0;
	result[1][32] = 1;
	result[1][33] = 0;
	result[1][34] = 1;
	result[1][35] = 0;
	result[1][36] = 1;                                                                                                                                         
	result[1][37] = 0;                                                                                                                                         
	result[1][38] = 1;                                                                                                                                         
	result[1][39] = 0;                                                                                                                                         
	result[1][40] = 1;                                                                                                                                          
	result[1][41] = 0;                                                                                                                                          
	result[1][42] = 1;                                                                                                                                          
	result[1][43] = 0;                                                                                                                                          
	result[1][44] = 1;
	result[1][45] = 0;
	result[1][46] = 1;
	result[1][47] = 0;
	result[1][48] = 1;
	result[1][49] = 0;
	result[1][50] = 1;
	result[2][1] = 1;
	result[2][2] = 2;
	result[2][3] = 3;
	result[2][4] = 5;
	result[2][5] = 8;
	result[2][6] = 13;
	result[2][7] = 21;
	result[2][8] = 34;
	result[2][9] = 55;
	result[2][10] = 89;
	result[2][11] = 144;
	result[2][12] = 233;
	result[2][13] = 377;
	result[2][14] = 610;
	result[2][15] = 987;
	result[2][16] = 1597;
	result[2][17] = 2584;
	result[2][18] = 4181;
	result[2][19] = 6765;
	result[2][20] = 10946;
	result[2][21] = 17711;
	result[2][22] = 28657;
	result[2][23] = 46368;
	result[2][24] = 75025;
	result[2][25] = 121393;
	result[3][1] = 0;
	result[3][2] = 3;
	result[3][3] = 0;
	result[3][4] = 11;
	result[3][5] = 0;
	result[3][6] = 41;
	result[3][7] = 0;
	result[3][8] = 153;
	result[3][9] = 0;
	result[3][10] = 571;
	result[3][11] = 0;
	result[3][12] = 2131;
	result[3][13] = 0;
	result[3][14] = 7953;
	result[3][15] = 0;
	result[3][16] = 29681;
	result[4][1] = 1;
	result[4][2] = 5;
	result[4][3] = 11;
	result[4][4] = 36;
	result[4][5] = 95;
	result[4][6] = 281;
	result[4][7] = 781;
	result[4][8] = 2245;
	result[4][9] = 6336;
	result[4][10] = 18061;
	result[4][11] = 51205;
	result[4][12] = 145601;
	result[5][1] = 0;
	result[5][2] = 8;
	result[5][3] = 0;
	result[5][4] = 95;
	result[5][5] = 0;
	result[5][6] = 1183;
	result[5][7] = 0;
	result[5][8] = 14824;
	result[5][9] = 0;
	result[5][10] = 185921;
	result[6][1] = 1;
	result[6][2] = 13;
	result[6][3] = 41;
	result[6][4] = 281;
	result[6][5] = 1183;
	result[6][6] = 6728;
	result[6][7] = 31529;
	result[6][8] = 167089;
	result[7][1] = 0;
	result[7][2] = 21;
	result[7][3] = 0;
	result[7][4] = 781;
	result[7][5] = 0;
	result[7][6] = 31529;
	result[7][7] = 0;
	result[8][1] = 1;
	result[8][2] = 34;
	result[8][3] = 153;
	result[8][4] = 2245;
	result[8][5] = 14824;
	result[8][6] = 167089;
	result[9][1] = 0;
	result[9][2] = 55;
	result[9][3] = 0;
	result[9][4] = 6336;
	result[9][5] = 0;
	result[10][1] = 1;
	result[10][2] = 89;
	result[10][3] = 571;
	result[10][4] = 18061;
	result[10][5] = 185921;
	result[11][1] = 0;
	result[11][2] = 144;
	result[11][3] = 0;
	result[11][4] = 51205;
	result[12][1] = 1;
	result[12][2] = 233;
	result[12][3] = 2131;
	result[12][4] = 145601;
	result[13][1] = 0;
	result[13][2] = 377;
	result[13][3] = 0;
	result[14][1] = 1;
	result[14][2] = 610;
	result[14][3] = 7953;
	result[15][1] = 0;
	result[15][2] = 987;
	result[15][3] = 0;
	result[16][1] = 1;
	result[16][2] = 1597;
	result[16][3] = 29681;
	result[17][1] = 0;
	result[17][2] = 2584;
	result[18][1] = 1;
	result[18][2] = 4181;
	result[19][1] = 0;
	result[19][2] = 6765;
	result[20][1] = 1;
	result[20][2] = 10946;
	result[21][1] = 0;
	result[21][2] = 17711;
	result[22][1] = 1;
	result[22][2] = 28657;
	result[23][1] = 0;
	result[23][2] = 46368;
	result[24][1] = 1;
	result[24][2] = 75025;
	result[25][1] = 0;
	result[25][2] = 121393;
	result[26][1] = 1;
	result[27][1] = 0;
	result[28][1] = 1;
	result[29][1] = 0;
	result[30][1] = 1;
	result[31][1] = 0;
	result[32][1] = 1;
	result[33][1] = 0;
	result[34][1] = 1;
	result[35][1] = 0;
	result[36][1] = 1;
	result[37][1] = 0;
	result[38][1] = 1;
	result[39][1] = 0;
	result[40][1] = 1;
	result[41][1] = 0;
	result[42][1] = 1;
	result[43][1] = 0;
	result[44][1] = 1;
	result[45][1] = 0;
	result[46][1] = 1;
	result[47][1] = 0;
	result[48][1] = 1;
	result[49][1] = 0;
	result[50][1] = 1;

	ofstream out("dominoes.out");
	
	out << result[w][h];

	out.close();
}
